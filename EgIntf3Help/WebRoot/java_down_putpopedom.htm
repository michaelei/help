<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>无标题文档</title>
<script type="text/javascript" src="js/comm.js"></script>
<link href="js/comm.css" rel="stylesheet" type="text/css" />

</head>

<body>
<p class="info-title">消息类：com.eg.intf3.msg.PutPopedoms </p>
<p class="paddingleft10">根据不同的操作类型来增加或删除用户开门权限。同一个卡号的有效开门时间段只能有一个。</p>
<p class="info-title">示例代码</p>
<div style="padding-left:20px;">
<span class="text-anno">//指定主控器唯一标识符和设备通讯码</span><br />
String ctrlUUID = "14:06:30:00:04:AB";<br />
int deviceCode = 100;<br />
<span class="text-anno">//构建开门权限下行对象</span><br />
PutPopedoms msg = new PutPopedoms(ctrlUUID, deviceCode);<br />
<span class="text-anno">//添加某条权限信息</span><br />
Popedom popedom = new Popedom();<br />
<span class="text-anno">/**<br />
* 设置该条权限的操作类型：<br />
* Popedom.PopedomOperate_Add_or_Modify: 新增或修改<br />
* <br />
* Popedom.PopedomOperate_Delete: 删除该条权限<br />
* <br />
* Popedom.PopedomOperate_ClearAll: 清空这个门锁的所有开门权限<br />
* <br />
* Popedom.PopedomOperate_ReportLoss: 挂失该条权限<br />
* <br />
* Popedom.PopedomOperate_CancelReportLoss: 解除挂失<br />
*/</span><br />
popedom.setOperate(Popedom.PopedomOperate_Add_or_Modify);<br />
<span class="text-anno">//删除某条开门权限</span><br />
<span class="text-anno">//popedom.setOperate(Popedom.PopedomOperate_Delete);</span><br />
<span class="text-anno">//设置开门的卡号, long型</span><br />
popedom.setCardNoL(12345678l);<br />
<span class="text-anno">/**<br />
* 设置运行开门的时间段<br />
* 时间段的设置有以下三种类型：（三种类型三选一）<br />
* 1、不限时间，一般不推荐<br />
* 2、设置连续的时间段，一般宾馆业务中常用这种方式<br />
* 3、设置间隔的时间段，一般办公业务中常用这种方式<br />
*/</span><br />
<span class="text-anno">//1、不限时间，一般不推荐</span><br />
popedom.setUseUnlimitedTime(true);<br />
<span class="text-anno">//2、设置连续的时间段，一般宾馆业务中常用这种方式</span><br />
Date startTime = new Date();<br />
Date endTime = new Date();<br />
popedom.setContinuousTime(startTime, endTime);<br />
<span class="text-anno">/**<br />
* 3、设置间隔的时间段，一般办公业务中常用这种方式<br />
* 该情况较为复杂，又进一步细分为：<br />
* a、是否启用日期段<br />
* b、是否启用时间段<br />
* c、是否启用星期几有效<br />
*/</span><br />
Date startDate = new Date();<br />
Date endDate = new Date();<br />
<span class="text-anno">//在某个日期段中有效</span><br />
popedom.setStartEndDate(startDate, endDate);<br />
<span class="text-anno">//在某个时间段中有效，如 08:30 ~ 18:00</span><br />
popedom.setStartEndTime(8, 30, 18, 0);<br />
<span class="text-anno">//星期几有效，如工作日有效（参数依次为：日、一、二、三、四、五、六）</span><br />
popedom.setWeekDays(false, true, true, true, true, true, false);<br />
<span class="text-anno">//每一条权限还可以分别设置用户自定义辅助信息，如数据库id等</span><br />
popedom.setCustomId(&quot;上层应用的数据库id&quot;);<br />
<span class="text-anno">/**<br />
* 将本条权限添加到下行对象中去<br />
* 注意，msg中一次最多添加30条权限，超过需要构建另外一个msg<br />
* <br />
* 如果选择的操作类型为：Popedom.PopedomOperate_ClearAll: 即清空这个门锁的所有开门权限，则无需设置卡号、时间<br />
*/</span><br />
msg.addPopedom(popedom);<br />
<span class="text-anno">//下发消息并设置监听器</span><br />
console.dispatchTask(msg, new OneTaskStateChangeAdapter(){<br />
<blockquote>@Override<br />
public void onSuccess(Task task) {<br />
<blockquote><span class="text-anno">//得到任务对象中能够的权限设置对象</span><br />
PutPopedoms msg = (PutPopedoms)task.getMsg();<br />
<span class="text-anno">//循环得到每条权限</span><br />
for(Popedom popedom: msg.getPopedomList()){<br />
<blockquote><span class="text-anno">//得到权限中的自定义信息，做一些处理，如更新数据库等</span><br />
popedom.getCustomId();<br /></blockquote>
}<br />
<span class="text-anno">//权限设置成功后，需要下发门锁权限时间戳设置</span><br />
PutPopedoms msgTimeStamp = new PutPopedoms(msg.getCtrlUUID(),msg.getDeviceCode(),true);<br />
<span class="text-anno">//下发时间戳设置命令，该命令无需处理，但是需要放置一个默认的OneTaskStateChangeAdapter对象</span><br />
console.dispatchTask(msgTimeStamp, new OneTaskStateChangeAdapter());<br />
</blockquote>
}<br /><br />
@Override<br />
public void onFail(Task task) {<br />
<br />
}<br />
</blockquote>
});</div>
</body>
</html>
